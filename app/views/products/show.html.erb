<p id="notice"><%= notice %></p>

<p>
  <b>Title:</b>
  <%= @product.title %>
</p>

<table>
	<tr>		
		<!-- list all existing keywords if they existing --> 
		<!-- create a view helper method to do this.  Show Value add <br /> -->
		<!-- Create function for user to add new keywords --> 
		<!-- Create function for user to create the keyword attribute and product attribute if first keyword --> 


		<!-- need to change this below to use productAttributeType instead of ProductAttributeTypeVariation --> 
		<% @product_attribute_types.each do |product_attribute_type| %> 
			<% this_product_attribute = ProductAttribute.find_by_product_id_and_product_attribute_type_id @product.id, product_attribute_type.id %>
			<% if this_product_attribute.nil? %> 
				<% this_product_attribute_type_variation_id = 0 %> 
			<% else %> 
				<% this_product_attribute_type_variation_id = this_product_attribute.product_attribute_type_variation_id  %> 
			<% end %> 
			<td>
				<h2><%= product_attribute_type.name %></h2>
				<% if product_attribute_type.type_id == 0 %>

					<% ###add code tha twill handle the different scenarios for the attribute types differeently %> 
					<%= form_for(@product_attribute_type_variation_value) do |f| %>
					  <% if @product_attribute_type_variation_value.errors.any? %>
					    <div id="error_explanation">				    	
					      <h2><%= pluralize(@product_attribute_type_variation_value.errors.count, "error") %> prohibited this product_attribute_type_variation_value from being saved:</h2>

					      <ul>
					      <% @product_attribute_type_variation_value.errors.full_messages.each do |msg| %>
					        <li><%= msg %></li>
					      <% end %>
					      </ul>
					    </div>
					  <% end %>

					  <% unless @product_keywords.nil? %>
						  <% unless @product_keywords[product_attribute_type.name].nil? %> 
						  	<% @product_keywords[product_attribute_type.name].each do |keyword| %>
						  		<%= keyword %><br />
						  	<% end %> 
						  <% end %> 
						<% end %> 

					  <div class="field">
					    <%= f.hidden_field :product_attribute_type_variation_id, :value => this_product_attribute_type_variation_id %> 
					    <%= f.hidden_field :product_id, :value => @product.id %> 
					    <%= f.hidden_field :product_attribute_type_id, :value => product_attribute_type.id %> 
					    <%= f.hidden_field :product_attribute_type_name, :value => product_attribute_type.name %> 
					    <%= f.text_field :value %>
					  </div>
					  <div class="actions">
					    <%= f.submit "Add Keyword" %>
					  </div>
					<% end %>
				<% elsif product_attribute_type.type_id == 1 #edition and subject %> 
					<% if this_product_attribute.nil? %> 
						<% this_product_attribute = ProductAttribute.new %> 
					<% end %> 
					<%= form_for(this_product_attribute) do |f| %>
    					<%= f.collection_select :product_attribute_type_variation_id, product_attribute_type.product_attribute_type_variations, :id, :name, :prompt => 'Select ' + product_attribute_type.name  %><br />
					    <%= f.hidden_field :product_id, :value => @product.id %> 
					    <%= f.hidden_field :product_attribute_type_id, :value => product_attribute_type.id %> 
					    <%= hidden_field_tag :product_page, true %> 
    					<%= f.submit %> <br />
    				<% end %>
    				To Add or Edit Categories, <%= link_to 'click here', product_attribute_type_variations_path %>
    				<% #need to add a parameter so user will only see or be able to add specific types from that link %>
				<% elsif product_attribute_type.type_id == 2 #book and digital %> 
					To Change Keywords, <%= link_to 'click Here', product_attribute_type.product_attribute_type_variations.first %>
				<% end %>
			</td>
		<% end %>
	</tr>
</table>


<%= link_to 'Edit Name', edit_product_path(@product) %> |
<%= link_to 'Back', products_path %>
